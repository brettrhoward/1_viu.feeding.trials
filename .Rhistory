datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv"
brt.dense <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(brt.dense)
datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv"
brt.dense <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(brt.dense)
WSGmethod_WCVI <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_WCVI.csv", header=FALSE)
View(WSGmethod_WCVI)
WCVI.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/WCVI Sites with GPS.csv")
View(WCVI.Sites.with.GPS)
library(tidyverse)
join <- left_join(WSGmethod_WCVI, WCVI.Sites.with.GPS, by = site)
join <- left_join(WSGmethod_WCVI, WCVI.Sites.with.GPS, by = "site")
WSGmethod_WCVI <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_WCVI.csv", header=FALSE)
View(WSGmethod_WCVI)
join <- left_join(WSGmethod_WCVI, WCVI.Sites.with.GPS, by = "site")
WSGmethod_WCVI <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_WCVI.csv", header=FALSE)
View(WSGmethod_WCVI)
WSGmethod_WCVI <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_WCVI.csv")
View(WSGmethod_WCVI)
join <- left_join(WSGmethod_WCVI, WCVI.Sites.with.GPS, by = "site")
View(join)
remove <- Unique(join)
remove <- distinct(join)
remove <- join %>% select(-c(fid, object_id, area, perimeter, siteID, QGIS_name, lat, long)
)
View(remove)
dis <- distinct(remove, site, keep.ALL = TRUE)
View(dis)
dis <- distinct(remove, site, keep.all = TRUE)
dis <- distinct(remove, site, .keep_all = TRUE)
remove <- join %>% select(-c(fid, object_id, area, perimeter, siteID, lat, long)
)
dis <- distinct(remove, site, .keep_all = TRUE)
remove <- join %>% select(-c(fid, object_id, area, perimeter, siteID, QGIS_name, lat, long)
)
dis <- distinct(remove, site, .keep_all = TRUE)
move <- dis %>% relocate(latitude, .after = site)
move <- move %>% relocate(longitude, .after = latitude)
View(move)
write.csv(move, "~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGfinal_WCVI.csv", row.names=FALSE)
brt_master <- read.csv("~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_master.csv")
View(brt_master)
datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv"brt.dense <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
> View(brt.dense)
>datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv")
datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv")
datafile1 <- ("~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv")
brt.dense <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
brt_master <- read.csv("~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_master.csv")
View(brt_master)
crab <- brt_master %>% select(c(site, day, month, year, total.cm.caught, cm, cm.pa, cm.adj))
View(crab)
crab <- crab %>% rename(cm.cpue = cm)
crab <- crab %>% rename(cpue = cm.cpue)
crab <- crab %>% rename(cpue.adj = cm.adj)
combined <- left_join(crab, WCVI.Sites.with.GPS, by = "site")
View(combined)
relocate <- combined %>% relocate(c(site, latitude, longitude, year, month, day, cm.pa, cpue, cpue.adj, total.cm.caught))
View(relocate)
write.csv(relocate, "~/Academic Projects/Prediction Method Comparison/EGCcatchdata_WCVI.csv", row.names=FALSE)
rm(0)
rm()
rm(list=ls())
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
View(SS.Sites.with.GPS)
library(tidyverse)
withnames <- SS.Sites.with.GPS %>% mutate(site(sentence,-1))
withnames <- SS.Sites.with.GPS %>% mutate(site = word(sentence,-1))
library(stringr)
withnames <- SS.Sites.with.GPS %>% mutate(site = word(sentence,-1))
withnames <- SS.Sites.with.GPS %>% mutate(site = word(layer,-1))
View(withnames)
withnames <- withnames %>% select(relocate(c(site, latitude, longitude)))
withnames <- withnames %>% select(c(site, latitude, longitude)))
withnames <- withnames %>% select(c(site, latitude, longitude))
dist <- withnames %>% distinct(site, .keep)
dist <- withnames %>% distinct(site, .keep_ALL = TRUE)
View(dist)
dist <- withnames %>% distinct(site, .keep_all = TRUE)
write.csv(dist, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv", row.names=FALSE)
write.csv(dist, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv", row.names=FALSE)
write.csv(withnames, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv", row.names=FALSE)
library(lexicon)
library(tidytext)
library(tidyverse)
example.text <- read.csv("~/Academic Projects/Shellfish Mesocosms/Phase 1 - Feeding Trials/Literature Review/example text.csv")
View(example.text)
text_df <- example.text %>%
unnest_tokens(word, text) %>%
count(paper, location, word, sort = TRUE)
total_counts <- text_df %>%
group_by(paper) %>%
summarize(total = sum(n))
View(text_df)
text_df <- left_join(text_df, total_counts)
data(modal_loughran_mcdonald)
modal.words <- modal_loughran_mcdonald %>% rename(word = modal)
View(modal_loughran_mcdonald)
sentiment <- text_df %>%
inner_join(modal.words, by = 'word', .keep_ALL = TRUE) %>%
mutate(prop.per.doc = n/total)
View(sentiment)
sum.prop <- sentiment %>% group_by(location, strength) %>% summarize(sum(prop.per.doc))
View(sum.prop)
table(sentiment$location, sentiment$strength)
update.packages(ask = FALSE, checkBuilt = TRUE)
WSGmethod_SalishSea <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_SalishSea.csv", header=FALSE)
View(WSGmethod_SalishSea)
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
View(SS.Sites.with.GPS)
library(tidyverse)
View(WSGmethod_SalishSea)
View(WSGmethod_SalishSea)
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
View(SS.Sites.with.GPS)
WSGmethod_SalishSea <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/WSGmethod_SalishSea.csv")
View(WSGmethod_SalishSea)
merged <- left_join(SS.Sites.with.GPS, WSGmethod_SalishSea, by = site)
merged <- SS.Sites.with.GPS %>% left_join(WSGmethod_SalishSea, by = c(site, QGIS_name)
)
merged <- SS.Sites.with.GPS %>% left_join(WSGmethod_SalishSea, by = c('site', 'QGIS_name'))
merged <- SS.Sites.with.GPS %>% left_join(WSGmethod_SalishSea, by = c('QGIS_name', 'site'))
WSGmethod_SalishSea <- WSGmethod_SalishSea %>% rename(geogname = site)
WSGmethod_SalishSea <- WSGmethod_SalishSea %>% rename(site = QGIS_name)
merged <- SS.Sites.with.GPS %>% left_join(WSGmethod_SalishSea, by = site)
merged <- SS.Sites.with.GPS %>% left_join(WSGmethod_SalishSea, by = 'site')
View(merged)
write.csv(merged, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/WSGfinal_SS.csv")
FFHPPDataReformating_CRABS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_CRABS.csv")
View(FFHPPDataReformating_CRABS)
FFHPPDataReformating_HEADERS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_HEADERS.csv")
View(FFHPPDataReformating_HEADERS)
library(tidyverse)
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set")
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = set)
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set.num")
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = set.num)
all.core <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = set.num)
FFHPPDataReformating_HEADERS <- FFHPPDataReformating_HEADERS %>% rename(set.number = set.num)
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = set.number)
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set.number")
View(all.core)
all.core <- filter(all.core, species == "XMB")
all.core <- select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num))
all.core <- select(c("source", "set.number", "soak.hrs", "geographic.location.x", "start.latitude..N.", "start.longitude..W.", "trap.num"))
all.core <- all.core %>% select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num))
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = set.number)
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set.number")
all.core <- filter(all.core, species == "XMB")
all.core <- all.core %>% select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num, species))
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set.number")
all.core <- all.core %>% select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num, species, start.year, month, day))
all.core <- all.core %>% filter(species == "XMB")
tally.core <- group_by(set.number) %>% tally(species)
tally.core <- all.core %>% group_by(set.number) %>% tally(species)
tally.core <- all.core %>% group_by(set.number) %>% tally()
View(tally.core)
tally.core <- all.core %>% group_by(set.number) %>% tally(keep.ALL = TRUE)
tally.core <- all.core %>% group_by(set.number, .keep_ALL = TRUE) %>% tally()
tally.core <- all.core %>% group_by(set.number) %>% tally(.keep_ALL = TRUE)
tally.core <- all.core %>% group_by(set.number, .keep_ALL = TRUE) %>% count()
tally.core <- all.core %>% group_by(set.number) %>% count()
tally.core <- all.core %>% count(set.number, species, .keep_ALL = TRUE)
tally.core <- all.core %>% add_count(set.number)
dis.core <- tally.core %>% distinct()
View(dis.core)
dis.core <- tally.core %>% distinct() %>% mutate(traps = max(value))
dis.core <- tally.core %>% distinct() %>% mutate(traps = max(trap.num))
tally.core <- all.core %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% add_tally()
tally.core <- tally.core %>% select(-trap.num) %>% distinct()
write.csv(tally.core, "~/Academic Projects/Prediction Methods Comparison/Salish Sea Summary Information/core.data.draft.csv")
write.csv(tally.core, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/core.data.draft.csv")
all.core <- all.core %>% select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num, species, start.year, month, day))
all.core <- left_join(FFHPPDataReformating_HEADERS, FFHPPDataReformating_CRABS, by = "set.number")
all.core <- all.core %>% select(c(source, set.number, soak.hrs, geographic.location.x, start.latitude..N., start.longitude..W., trap.num, species, start.year, month, day))
View(all.core)
core.pa <- all.core %>% mutate(., cm.pa = case_when(species == "XMB" ~ 1, species != "XMB" ~ 0))
View(core.pa)
tally.core <- core.pa %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% add_tally(cm.pa)
tally.core <- tally.core %>% select(-trap.num) %>% distinct()
tally.core <- tally.core %>% select(-species) %>% distinct()
tally.core <- core.pa %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% add_tally(cm.pa)
tally.core <- core.pa %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% add_tally(cm.pa, .drop = FALSE)
iris %>% group_by(Species, .drop=FALSE) %>% tally
tally.core <- core.pa %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% mutate(total.cm.caught = sum(sm.pa))
tally.core <- core.pa %>% group_by(set.number) %>% mutate(traps = max(trap.num)) %>% mutate(total.cm.caught = sum(cm.pa))
dist.core <- tally.core %>% select(-c(trap.num, species) %>% distinct()
)
dist.core <- tally.core %>% select(-c(trap.num, species)) %>% distinct()
View(dis.core)
View(dist.core)
dist.core <- tally.core %>% select(-c(trap.num, species, cm.pa)) %>% distinct() %>%  mutate(., cm.pa = case_when(total.cm.caught > 0 ~ 1, total.cm.caught = 0 ~ 0))
dist.core <- tally.core %>% select(-c(trap.num, species, cm.pa)) %>% distinct() %>%  mutate(., cm.pa = case_when(total.cm.caught > 0 ~ 1, total.cm.caught == 0 ~ 0))
write.csv(dist.core, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/core.data.draft.csv")
View(core.pa)
FFHPPDataReformating_CRABS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_CRABS.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(FFHPPDataReformating_CRABS)
FFHPPDataReformating_HEADERS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_HEADERS.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(FFHPPDataReformating_HEADERS)
library(tidyverse)
FFHPPDataReformating_CRABS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_CRABS.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(FFHPPDataReformating_CRABS)
FFHPPDataReformating_HEADERS <- read.csv("~/European Green Crab/Monitoring Updates/CORE Updates/2021/FFHPPDataReformating_HEADERS.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(FFHPPDataReformating_HEADERS)
library(tidyverse)
FFHPPDataReformating_CRABS <- FFHPPDataReformating_CRABS %>% rename(set.num = set.number)
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = set.num)
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = 'set.num')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% tally(species == XMB, n = total.cm.caught)
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% tally(species == XMB, total.cm.caught = n)
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% mutate(total.cm.caught = tally(species == XMB))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% mutate(total.cm.caught = tally(species == 'XMB'))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% mutate(total.cm.caught = count(species == 'XMB'))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% count(species == 'XMB')
View(crabs)
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_count(species == 'XMB')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_count(species == 'XMB')
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = 'set.num')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_count(species == 'XMB')
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_tally(species == 'XMB')
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = 'set.num')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_tally(species == 'XMB')
FFHPPDataReformating_CRABS <- FFHPPDataReformating_CRABS %>% rename(set.num = set.number)
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = 'set.num')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species, geographic.location))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_tally(species == 'XMB')
FFHPPDataReformating_CRABS <- FFHPPDataReformating_CRABS %>% rename(set.num = set.number)
crabs <- FFHPPDataReformating_HEADERS %>% left_join(FFHPPDataReformating_CRABS, by = 'set.num')
crabs <- crabs %>% select(c(set.num, start.year, month, day, soak.hrs, start.latitude..N., start.longitude..W., trap.num, species, geographic.location.x))
crabs <- crabs %>% group_by(set.num) %>% mutate(total.traps = max(trap.num)) %>% add_tally(species == 'XMB')
events.only <- crabs %>% select(-c(trap.num, species)) %>% distinct()
View(events.only)
events.only <- crabs %>% select(-c(trap.num, species)) %>% distinct() %>% filter(start.latitude..N. != NA)
events.only <- crabs %>% select(-c(trap.num, species)) %>% distinct() %>% filter_na(start.latitude..N.)
events.only <- crabs %>% select(-c(trap.num, species)) %>% distinct() %>% drop_na(start.latitude..N.)
View(events.only)
write.csv(events.only, "~/Academic Projects/Prediction Methods Comparison/Salish Sea Summary Information/core.data.draft.csv")
write.csv(events.only, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/core.data.draft.csv")
sci.crabs <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.draft.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
sci.crabs <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.withsites.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
sci.crabs <- sci.crabs %>% select(c(Day, Month, Year, SetNum, TrapNum, startLAT, startLONG, Species, HoursSoak, site))
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
View(SS.Sites.with.GPS)
sci.crabs <- sci.crabs %>% left_join(SS.Sites.with.GPS, by = "site")
View(sci.crabs)
sci.crabs <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.withsites.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
sci.crabs <- sci.crabs %>% select(c(Day, Month, Year, SetNum, TrapNum, Species, HoursSoak, site))
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
sci.crabs <- sci.crabs %>% left_join(SS.Sites.with.GPS, by = "site")
xmb.count <- sci.crabs %>% %>% mutate(total.traps = max(TrapNum)) %>% add_tally(Species == 'XMB')
xmb.count <- sci.crabs %>% mutate(total.traps = max(TrapNum)) %>% add_tally(Species == 'XMB')
View(xmb.count)
sci.crabs <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.withsites.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
sci.crabs <- sci.crabs %>% select(c(Day, Month, Year, SetNum, TrapNum, Species, HoursSoak, site))
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
sci.crabs <- sci.crabs %>% left_join(SS.Sites.with.GPS, by = "site")
xmb.count <- sci.crabs %>% group_by(Year, Month, Day, site, SetNum) %>% mutate(total.traps = max(TrapNum)) %>% add_tally(Species == 'XMB')
xmb.distinct <- xmb.count %>% select(-Species) %>% distinct()
View(xmb.distinct)
xmb.distinct <- xmb.count %>% select(-c(Species, TrapNum) %>% distinct()
xmb.distinct <- xmb.count %>% select(-c(Species, TrapNum)
xmb.distinct <- xmb.count %>% select(-c(Species, TrapNum)
)
xmb.distinct <- xmb.count %>% select(-c(Species, TrapNum)) %>% distinct()
View(xmb.distinct)
write.csv(xmb.distinct, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.salish.csv")
xmb.summarize <- xmb.distinct %>% group_by(Year, Month, Day, site) %>% summarise(avg.soak = mean(HoursSoak), total.cm.caught = sum(n), all.traps = sum(total.traps))
View(xmb.summarize)
write.csv(xmb.summarize, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.salish.csv")
write.csv(xmb.summarize, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.salish.csv")
sci.crabs <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.withsites.csv", header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
sci.crabs <- sci.crabs %>% select(c(Day, Month, Year, SetNum, TrapNum, Species, HoursSoak, site))
SS.Sites.with.GPS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/SS Sites with GPS.csv")
sci.crabs <- sci.crabs %>% left_join(SS.Sites.with.GPS, by = "site")
xmb.count <- sci.crabs %>% group_by(Year, Month, Day, site, SetNum) %>% mutate(total.traps = max(TrapNum)) %>% add_tally(Species == 'XMB')
xmb.distinct <- xmb.count %>% select(-c(Species, TrapNum)) %>% distinct()
xmb.summarize <- xmb.distinct %>% group_by(Year, Month, Day, site) %>% summarise(avg.soak = mean(HoursSoak), total.cm.caught = sum(n), all.traps = sum(total.traps))
xmb.summarize <- xmb.summarize %>% left_join(SS.Sites.with.GPS, by = "site")
write.csv(xmb.summarize, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.salish.csv")
write.csv(xmb.summarize, "~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/science.data.salish.csv")
EGCcatchdata_SS <- read.csv("~/Academic Projects/Prediction Method Comparison/Salish Sea Summary Information/EGCcatchdata_SS.csv")
View(EGCcatchdata_SS)
_Complete.Crab.Query <- read.csv("~/European Green Crab/Trapping Data and Code/EGC Trapping 2020/_Complete Crab Query.txt")
View(_Complete.Crab.Query)
Complete.Crab.Query <- read.csv("~/European Green Crab/Trapping Data and Code/EGC Trapping 2020/_Complete Crab Query.txt")
View(Complete.Crab.Query)
sooke <- Complete.Crab.Query %>% filter(StatArea == "20")
library(ttidyverse)
library(tidyverse)
sooke <- Complete.Crab.Query %>% filter(StatArea == "20")
table(sooke$Species)
table(sooke$SpeciesName)
table(sooke$species_scientific_nme)
datafile1 <- "~/Academic Projects/European Green Crab SDMs/BRT SDMs/WCVI/BRT - Analysis/2020 Data Files/brt_dense_full.csv"
brt.dense <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na"), strip.white = TRUE)
View(brt.dense)
RSSfinal_SS <- read.csv("~/Academic Projects/Prediction Method Comparison/RSS Method Output/RSSfinal_SS.csv")
View(RSSfinal_SS)
table(RSSfinal_SS$cc_rank)
table(RSSfinal_SS$override_rank)
Final.RSS.SSpolygon.sites.with.weights <- read.csv("C:/Users/howardb/Desktop/Final RSS-SSpolygon sites with weights.csv")
View(Final.RSS.SSpolygon.sites.with.weights)
table(Final.RSS.SSpolygon.sites.with.weights$cc_rank)
table(RSSfinal_SS$cc_rank)
combined.predictions.Nov19 <- read.csv("C:/Users/howardb/Downloads/combined.predictions.Nov19.csv")
View(combined.predictions.Nov19)
table(combined.predictions.Nov19$rss.rank)
WSGfinal_Erinupdated2022_SS <- read.csv("~/Academic Projects/Prediction Method Comparison/WSG Method Output/Replacement Sites - Completed by Erin 2022/WSGfinal_Erinupdated2022_SS.csv")
View(WSGfinal_Erinupdated2022_SS)
combined.predictions.Nov19 <- read.csv("C:/Users/howardb/Downloads/combined.predictions.Nov19.csv")
View(combined.predictions.Nov19)
table(combined.predictions.Nov19$wsg.score)
rm(list=ls())
setwd("~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials")
library(lubridate)
library(fishualize)
library(tidyverse)
# Load data
datafile1 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/individual_crab_data.csv"
datafile2 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hsc_trials.csv"
datafile3 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hermit_trials.csv"
datafile4 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/dire_trials.csv"
datafile5 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/littleneck_trials.csv"
datafile6 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/mussel_trials.csv"
datafile7 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/psc_trials.csv"
datafile8 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/varnish_trials.csv"
crabs <- read.csv(datafile1, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
hsc <- read.csv(datafile2, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
hermit <- read.csv(datafile3, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
dire <- read.csv(datafile4, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
littleneck <- read.csv(datafile5, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
mussel <- read.csv(datafile6, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
psc <- read.csv(datafile7, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
varnish <- read.csv(datafile8, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
prey <- bind_rows(hsc, hermit, dire, littleneck, mussel, psc, varnish) %>% left_join(crabs, by = "crab.no") %>% mutate(date.run = dmy(date.run)) %>% select(c(date.run, trial.no, crab.no, spp, spp.size, prey, bin.no, num.fully.eaten, num.attacked, sum.weight.consumed, sex, cw, lc, rc, wgt)) %>% mutate(row.id = row_number()) %>% filter(trial.no != "F-7") %>% filter(!row.id %in% c(279, 334))
datafile9 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hsc_individual.csv"
datafile10 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/littleneck_individual.csv"
datafile11 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/psc_individual.csv"
datafile12 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/varnish_individual.csv"
hsc.ind <- read.csv(datafile9, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
littleneck.ind <- read.csv(datafile10, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
psc.ind <- read.csv(datafile11, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
varnish.ind <- read.csv(datafile12, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
prey.sizes <- bind_rows(hsc.ind, littleneck.ind, psc.ind, varnish.ind) %>% left_join(crabs, by = "crab.no") %>% mutate(date.run = dmy(date.run)) %>% select(c(date.run, trial.no, crab.no, spp, spp.size, prey, weight, eaten, bin.no, sex, cw, lc, rc, wgt)) %>% filter(eaten == 1) %>% mutate(row.id = row_number()) %>% filter(trial.no != "F-7")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point() +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 5, height = 5, units = "in")
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 6, height = 5, units = "in")
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 6, height = 2, units = "in")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point() +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 6, height = 2, units = "in")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 3) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 5, units = "in")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 2) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 4, units = "in")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 2) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 3, units = "in")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 1) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 2, units = "in")
View(hsc.ind)
datafile9 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hsc_individual.csv"
datafile10 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/littleneck_individual.csv"
datafile11 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/psc_individual.csv"
datafile12 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/varnish_individual.csv"
hsc.ind <- read.csv(datafile9, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
littleneck.ind <- read.csv(datafile10, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
psc.ind <- read.csv(datafile11, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
varnish.ind <- read.csv(datafile12, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
prey.sizes <- bind_rows(hsc.ind, littleneck.ind, psc.ind, varnish.ind) %>% left_join(crabs, by = "crab.no") %>% mutate(date.run = dmy(date.run)) %>% select(c(date.run, trial.no, crab.no, spp, spp.size, prey, weight, eaten, bin.no, sex, cw, lc, rc, wgt)) %>% filter(eaten == 1) %>% mutate(row.id = row_number()) %>% filter(trial.no != "F-7")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 1) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 2, units = "in")
View(hsc.ind)
View(hsc.ind)
datafile9 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hsc_individual.csv"
datafile10 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/littleneck_individual.csv"
datafile11 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/psc_individual.csv"
datafile12 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/varnish_individual.csv"
hsc.ind <- read.csv(datafile9, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
littleneck.ind <- read.csv(datafile10, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
psc.ind <- read.csv(datafile11, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
varnish.ind <- read.csv(datafile12, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
prey.sizes <- bind_rows(hsc.ind, littleneck.ind, psc.ind, varnish.ind) %>% left_join(crabs, by = "crab.no") %>% mutate(date.run = dmy(date.run)) %>% select(c(date.run, trial.no, crab.no, spp, spp.size, prey, weight, eaten, bin.no, sex, cw, lc, rc, wgt)) %>% filter(eaten == 1) %>% mutate(row.id = row_number()) %>% filter(trial.no != "F-7")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 1) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 2, units = "in")
View(hsc.ind)
datafile9 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/hsc_individual.csv"
datafile10 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/littleneck_individual.csv"
datafile11 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/psc_individual.csv"
datafile12 <- "~/Academic Projects/CFRA 2021 - Mesocosms/1_viu.feeding.trials/data/varnish_individual.csv"
hsc.ind <- read.csv(datafile9, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
littleneck.ind <- read.csv(datafile10, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
psc.ind <- read.csv(datafile11, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
varnish.ind <- read.csv(datafile12, header=T, na.strings = c("", "NA", "na", "N/A"), strip.white = TRUE)
prey.sizes <- bind_rows(hsc.ind, littleneck.ind, psc.ind, varnish.ind) %>% left_join(crabs, by = "crab.no") %>% mutate(date.run = dmy(date.run)) %>% select(c(date.run, trial.no, crab.no, spp, spp.size, prey, weight, eaten, bin.no, sex, cw, lc, rc, wgt)) %>% filter(eaten == 1) %>% mutate(row.id = row_number()) %>% filter(trial.no != "F-7")
ggplot(prey.sizes, aes(colour=spp.size, x = cw, y = weight)) +
geom_point(size = 1) +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Individual prey weight (g)") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank())
ggsave("figures/ind.weightconsumed_crabsize.tiff", width = 7, height = 2, units = "in")
spp.consumed <- prey %>% filter(num.fully.eaten > 0) %>% group_by(spp.size, crab.no) %>% tally()
ggplot(spp.consumed) +
geom_density(aes(y = ..count.., x = n, color = spp.size, fill = spp.size), alpha = 0.4) +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
scale_fill_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
xlab("Number of species eaten") + ylab("Count") +
scale_y_continuous(expand = c(0,0),
limits = c(0,20)) +
scale_x_continuous(expand = c(0,0),
limits = c(0,7)) +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank(), legend.position = c(0.85, 0.85))
View(prey)
non.eaters <- prey %>% group_by(spp.size, crab.no) %>% tally(num.fully.eaten)
View(non.eaters)
non.eaters <- prey %>% group_by(spp.size, crab.no) %>% tally(num.fully.eaten) %>% filter(n == 0)
View(non.eaters)
non.eaters <- prey %>% group_by(spp.size, crab.no) %>% tally(num.fully.eaten) %>% filter(n == 0) %>% filter(!is.na(n))
View(non.eaters)
non.eaters <- prey %>% group_by(spp.size, crab.no) %>% tally(num.fully.eaten) %>% filter(n == 0) %>% filter(!is.na(spp.size))
View(non.eaters)
View(littleneck.ind)
View(spp.consumed)
spp.consumed <- prey %>% filter(num.fully.eaten > 0) %>% group_by(spp.size, crab.no) %>% tally() %>% bind_rows(non.eaters)
View(spp.consumed)
ggplot(spp.consumed) +
geom_density(aes(y = ..count.., x = n, color = spp.size, fill = spp.size), alpha = 0.4) +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
scale_fill_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
xlab("Number of species eaten") + ylab("Count") +
scale_y_continuous(expand = c(0,0),
limits = c(0,20)) +
scale_x_continuous(expand = c(0,0),
limits = c(0,7)) +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.title = element_blank(), legend.position = c(0.85, 0.85))
ggsave("figures/num_species_eaten.tiff", width = 5, height = 5, units = "in")
size.consumption <- prey %>% group_by(spp.size, crab.no, prey, cw) %>% tally(num.fully.eaten) %>% filter(spp.size != "NA")
ggplot(size.consumption, aes(colour=spp.size, x = cw, y = n)) +
geom_point() +
facet_wrap(~prey, ncol = 4, scales = "free") +
scale_colour_fish(option = "Halichoeres_bivittatus", discrete = TRUE, direction = 1) +
#geom_smooth(method = "lm", se = FALSE) +
xlab("Carapace width (mm)") + ylab("Total consumed across all trials") +
theme_classic() +
theme(panel.grid.major = element_blank(), legend.position = c(0.9, 0.2), legend.title = element_blank())
ggsave("figures/totalconsumed_crabsize.tiff", width = 7, height = 5, units = "in")
View(prey.sizes)
View(psc.ind)
